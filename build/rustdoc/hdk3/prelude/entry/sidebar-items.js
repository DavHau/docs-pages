initSidebarItems({"constant":[["ENTRY_SIZE_LIMIT","Entries larger than this number of bytes cannot be created"]],"enum":[["Entry","Structure holding the entry portion of a chain element."],["EntryError","Errors involving app entry creation"],["GetStrategy","Describes the get call and what information the caller is concerned about. This helps the subconscious avoid unnecessary network calls."]],"struct":[["AppEntryBytes","Newtype for the bytes comprising an App entry"],["EntryWithDefId","Data to create an entry."],["GetInput","Zome IO inner for get and get_details calls."],["GetOptions","Options for controlling how get works"],["UpdateInput","Zome IO inner for update."]],"type":[["CapClaimEntry","The data type written to the source chain to denote a capability claim"],["CapGrantEntry","The data type written to the source chain when explicitly granting a capability. NB: this is not simply `CapGrant`, because the `CapGrant::ChainAuthor` grant is already implied by `Entry::Agent`, so that should not be committed to a chain. This is a type alias because if we add other capability types in the future, we may want to include them"]]});